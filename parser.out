Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> run
Rule 1     run -> command
Rule 2     run -> empty
Rule 3     command -> ANIMATE animation color miliseconds
Rule 4     command -> ANIMATE animation rgb miliseconds
Rule 5     rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP
Rule 6     miliseconds -> NUMBER
Rule 7     color -> RED
Rule 8     color -> BLUE
Rule 9     color -> GREEN
Rule 10    color -> YELLOW
Rule 11    color -> ORANGE
Rule 12    color -> PURPLE
Rule 13    color -> WHITE
Rule 14    animation -> RAINBOW
Rule 15    animation -> RANDOW_CYCLE
Rule 16    animation -> THEATER_CHASE_RAINBOW
Rule 17    animation -> COLOR_WIPE
Rule 18    animation -> THEATER_CHASE
Rule 19    empty -> <empty>

Terminals, with rules where they appear

ANIMATE              : 3 4
BLUE                 : 8
COLOR_WIPE           : 17
COMA                 : 5 5
GREEN                : 9
LP                   : 5
NUMBER               : 5 5 5 6
ORANGE               : 11
PURPLE               : 12
RAINBOW              : 14
RANDOW_CYCLE         : 15
RED                  : 7
RP                   : 5
THEATER_CHASE        : 18
THEATER_CHASE_RAINBOW : 16
WHITE                : 13
YELLOW               : 10
error                : 

Nonterminals, with rules where they appear

animation            : 3 4
color                : 3
command              : 1
empty                : 2
miliseconds          : 3 4
rgb                  : 4
run                  : 0

Parsing method: LALR

state 0

    (0) S' -> . run
    (1) run -> . command
    (2) run -> . empty
    (3) command -> . ANIMATE animation color miliseconds
    (4) command -> . ANIMATE animation rgb miliseconds
    (19) empty -> .

    ANIMATE         shift and go to state 4
    $end            reduce using rule 19 (empty -> .)

    run                            shift and go to state 1
    command                        shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> run .



state 2

    (1) run -> command .

    $end            reduce using rule 1 (run -> command .)


state 3

    (2) run -> empty .

    $end            reduce using rule 2 (run -> empty .)


state 4

    (3) command -> ANIMATE . animation color miliseconds
    (4) command -> ANIMATE . animation rgb miliseconds
    (14) animation -> . RAINBOW
    (15) animation -> . RANDOW_CYCLE
    (16) animation -> . THEATER_CHASE_RAINBOW
    (17) animation -> . COLOR_WIPE
    (18) animation -> . THEATER_CHASE

    RAINBOW         shift and go to state 6
    RANDOW_CYCLE    shift and go to state 7
    THEATER_CHASE_RAINBOW shift and go to state 8
    COLOR_WIPE      shift and go to state 9
    THEATER_CHASE   shift and go to state 10

    animation                      shift and go to state 5

state 5

    (3) command -> ANIMATE animation . color miliseconds
    (4) command -> ANIMATE animation . rgb miliseconds
    (7) color -> . RED
    (8) color -> . BLUE
    (9) color -> . GREEN
    (10) color -> . YELLOW
    (11) color -> . ORANGE
    (12) color -> . PURPLE
    (13) color -> . WHITE
    (5) rgb -> . LP NUMBER COMA NUMBER COMA NUMBER RP

    RED             shift and go to state 13
    BLUE            shift and go to state 14
    GREEN           shift and go to state 15
    YELLOW          shift and go to state 16
    ORANGE          shift and go to state 17
    PURPLE          shift and go to state 18
    WHITE           shift and go to state 19
    LP              shift and go to state 20

    color                          shift and go to state 11
    rgb                            shift and go to state 12

state 6

    (14) animation -> RAINBOW .

    RED             reduce using rule 14 (animation -> RAINBOW .)
    BLUE            reduce using rule 14 (animation -> RAINBOW .)
    GREEN           reduce using rule 14 (animation -> RAINBOW .)
    YELLOW          reduce using rule 14 (animation -> RAINBOW .)
    ORANGE          reduce using rule 14 (animation -> RAINBOW .)
    PURPLE          reduce using rule 14 (animation -> RAINBOW .)
    WHITE           reduce using rule 14 (animation -> RAINBOW .)
    LP              reduce using rule 14 (animation -> RAINBOW .)


state 7

    (15) animation -> RANDOW_CYCLE .

    RED             reduce using rule 15 (animation -> RANDOW_CYCLE .)
    BLUE            reduce using rule 15 (animation -> RANDOW_CYCLE .)
    GREEN           reduce using rule 15 (animation -> RANDOW_CYCLE .)
    YELLOW          reduce using rule 15 (animation -> RANDOW_CYCLE .)
    ORANGE          reduce using rule 15 (animation -> RANDOW_CYCLE .)
    PURPLE          reduce using rule 15 (animation -> RANDOW_CYCLE .)
    WHITE           reduce using rule 15 (animation -> RANDOW_CYCLE .)
    LP              reduce using rule 15 (animation -> RANDOW_CYCLE .)


state 8

    (16) animation -> THEATER_CHASE_RAINBOW .

    RED             reduce using rule 16 (animation -> THEATER_CHASE_RAINBOW .)
    BLUE            reduce using rule 16 (animation -> THEATER_CHASE_RAINBOW .)
    GREEN           reduce using rule 16 (animation -> THEATER_CHASE_RAINBOW .)
    YELLOW          reduce using rule 16 (animation -> THEATER_CHASE_RAINBOW .)
    ORANGE          reduce using rule 16 (animation -> THEATER_CHASE_RAINBOW .)
    PURPLE          reduce using rule 16 (animation -> THEATER_CHASE_RAINBOW .)
    WHITE           reduce using rule 16 (animation -> THEATER_CHASE_RAINBOW .)
    LP              reduce using rule 16 (animation -> THEATER_CHASE_RAINBOW .)


state 9

    (17) animation -> COLOR_WIPE .

    RED             reduce using rule 17 (animation -> COLOR_WIPE .)
    BLUE            reduce using rule 17 (animation -> COLOR_WIPE .)
    GREEN           reduce using rule 17 (animation -> COLOR_WIPE .)
    YELLOW          reduce using rule 17 (animation -> COLOR_WIPE .)
    ORANGE          reduce using rule 17 (animation -> COLOR_WIPE .)
    PURPLE          reduce using rule 17 (animation -> COLOR_WIPE .)
    WHITE           reduce using rule 17 (animation -> COLOR_WIPE .)
    LP              reduce using rule 17 (animation -> COLOR_WIPE .)


state 10

    (18) animation -> THEATER_CHASE .

    RED             reduce using rule 18 (animation -> THEATER_CHASE .)
    BLUE            reduce using rule 18 (animation -> THEATER_CHASE .)
    GREEN           reduce using rule 18 (animation -> THEATER_CHASE .)
    YELLOW          reduce using rule 18 (animation -> THEATER_CHASE .)
    ORANGE          reduce using rule 18 (animation -> THEATER_CHASE .)
    PURPLE          reduce using rule 18 (animation -> THEATER_CHASE .)
    WHITE           reduce using rule 18 (animation -> THEATER_CHASE .)
    LP              reduce using rule 18 (animation -> THEATER_CHASE .)


state 11

    (3) command -> ANIMATE animation color . miliseconds
    (6) miliseconds -> . NUMBER

    NUMBER          shift and go to state 22

    miliseconds                    shift and go to state 21

state 12

    (4) command -> ANIMATE animation rgb . miliseconds
    (6) miliseconds -> . NUMBER

    NUMBER          shift and go to state 22

    miliseconds                    shift and go to state 23

state 13

    (7) color -> RED .

    NUMBER          reduce using rule 7 (color -> RED .)


state 14

    (8) color -> BLUE .

    NUMBER          reduce using rule 8 (color -> BLUE .)


state 15

    (9) color -> GREEN .

    NUMBER          reduce using rule 9 (color -> GREEN .)


state 16

    (10) color -> YELLOW .

    NUMBER          reduce using rule 10 (color -> YELLOW .)


state 17

    (11) color -> ORANGE .

    NUMBER          reduce using rule 11 (color -> ORANGE .)


state 18

    (12) color -> PURPLE .

    NUMBER          reduce using rule 12 (color -> PURPLE .)


state 19

    (13) color -> WHITE .

    NUMBER          reduce using rule 13 (color -> WHITE .)


state 20

    (5) rgb -> LP . NUMBER COMA NUMBER COMA NUMBER RP

    NUMBER          shift and go to state 24


state 21

    (3) command -> ANIMATE animation color miliseconds .

    $end            reduce using rule 3 (command -> ANIMATE animation color miliseconds .)


state 22

    (6) miliseconds -> NUMBER .

    $end            reduce using rule 6 (miliseconds -> NUMBER .)


state 23

    (4) command -> ANIMATE animation rgb miliseconds .

    $end            reduce using rule 4 (command -> ANIMATE animation rgb miliseconds .)


state 24

    (5) rgb -> LP NUMBER . COMA NUMBER COMA NUMBER RP

    COMA            shift and go to state 25


state 25

    (5) rgb -> LP NUMBER COMA . NUMBER COMA NUMBER RP

    NUMBER          shift and go to state 26


state 26

    (5) rgb -> LP NUMBER COMA NUMBER . COMA NUMBER RP

    COMA            shift and go to state 27


state 27

    (5) rgb -> LP NUMBER COMA NUMBER COMA . NUMBER RP

    NUMBER          shift and go to state 28


state 28

    (5) rgb -> LP NUMBER COMA NUMBER COMA NUMBER . RP

    RP              shift and go to state 29


state 29

    (5) rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .

    NUMBER          reduce using rule 5 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)

