Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NEW_LINE

Grammar

Rule 0     S' -> execute
Rule 1     execute -> command
Rule 2     execute -> var_assign
Rule 3     execute -> empty
Rule 4     var_assign -> NAME EQUALS color
Rule 5     var_assign -> NAME EQUALS rgb
Rule 6     var_assign -> NAME EQUALS miliseconds
Rule 7     var_assign -> NAME EQUALS animation
Rule 8     var_assign -> NAME EQUALS button_pos
Rule 9     command -> ANIMATE animation color miliseconds
Rule 10    command -> ANIMATE animation rgb miliseconds
Rule 11    command -> START
Rule 12    command -> END
Rule 13    button_pos -> BUTTON_UP
Rule 14    button_pos -> BUTTON_DOWN
Rule 15    button_pos -> NAME
Rule 16    rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP
Rule 17    rgb -> NAME
Rule 18    miliseconds -> NUMBER
Rule 19    miliseconds -> NAME
Rule 20    color -> RED
Rule 21    color -> BLUE
Rule 22    color -> GREEN
Rule 23    color -> YELLOW
Rule 24    color -> ORANGE
Rule 25    color -> PURPLE
Rule 26    color -> WHITE
Rule 27    color -> NAME
Rule 28    animation -> RAINBOW
Rule 29    animation -> RANDOW_CYCLE
Rule 30    animation -> THEATER_CHASE_RAINBOW
Rule 31    animation -> COLOR_WIPE
Rule 32    animation -> THEATER_CHASE
Rule 33    animation -> NAME
Rule 34    empty -> <empty>

Terminals, with rules where they appear

ANIMATE              : 9 10
BLUE                 : 21
BUTTON_DOWN          : 14
BUTTON_UP            : 13
COLOR_WIPE           : 31
COMA                 : 16 16
END                  : 12
EQUALS               : 4 5 6 7 8
GREEN                : 22
LP                   : 16
NAME                 : 4 5 6 7 8 15 17 19 27 33
NEW_LINE             : 
NUMBER               : 16 16 16 18
ORANGE               : 24
PURPLE               : 25
RAINBOW              : 28
RANDOW_CYCLE         : 29
RED                  : 20
RP                   : 16
START                : 11
THEATER_CHASE        : 32
THEATER_CHASE_RAINBOW : 30
WHITE                : 26
YELLOW               : 23
error                : 

Nonterminals, with rules where they appear

animation            : 7 9 10
button_pos           : 8
color                : 4 9
command              : 1
empty                : 3
execute              : 0
miliseconds          : 6 9 10
rgb                  : 5 10
var_assign           : 2

Parsing method: LALR

state 0

    (0) S' -> . execute
    (1) execute -> . command
    (2) execute -> . var_assign
    (3) execute -> . empty
    (9) command -> . ANIMATE animation color miliseconds
    (10) command -> . ANIMATE animation rgb miliseconds
    (11) command -> . START
    (12) command -> . END
    (4) var_assign -> . NAME EQUALS color
    (5) var_assign -> . NAME EQUALS rgb
    (6) var_assign -> . NAME EQUALS miliseconds
    (7) var_assign -> . NAME EQUALS animation
    (8) var_assign -> . NAME EQUALS button_pos
    (34) empty -> .

    ANIMATE         shift and go to state 5
    START           shift and go to state 6
    END             shift and go to state 7
    NAME            shift and go to state 8
    $end            reduce using rule 34 (empty -> .)

    execute                        shift and go to state 1
    command                        shift and go to state 2
    var_assign                     shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> execute .



state 2

    (1) execute -> command .

    $end            reduce using rule 1 (execute -> command .)


state 3

    (2) execute -> var_assign .

    $end            reduce using rule 2 (execute -> var_assign .)


state 4

    (3) execute -> empty .

    $end            reduce using rule 3 (execute -> empty .)


state 5

    (9) command -> ANIMATE . animation color miliseconds
    (10) command -> ANIMATE . animation rgb miliseconds
    (28) animation -> . RAINBOW
    (29) animation -> . RANDOW_CYCLE
    (30) animation -> . THEATER_CHASE_RAINBOW
    (31) animation -> . COLOR_WIPE
    (32) animation -> . THEATER_CHASE
    (33) animation -> . NAME

    RAINBOW         shift and go to state 10
    RANDOW_CYCLE    shift and go to state 11
    THEATER_CHASE_RAINBOW shift and go to state 12
    COLOR_WIPE      shift and go to state 13
    THEATER_CHASE   shift and go to state 14
    NAME            shift and go to state 15

    animation                      shift and go to state 9

state 6

    (11) command -> START .

    $end            reduce using rule 11 (command -> START .)


state 7

    (12) command -> END .

    $end            reduce using rule 12 (command -> END .)


state 8

    (4) var_assign -> NAME . EQUALS color
    (5) var_assign -> NAME . EQUALS rgb
    (6) var_assign -> NAME . EQUALS miliseconds
    (7) var_assign -> NAME . EQUALS animation
    (8) var_assign -> NAME . EQUALS button_pos

    EQUALS          shift and go to state 16


state 9

    (9) command -> ANIMATE animation . color miliseconds
    (10) command -> ANIMATE animation . rgb miliseconds
    (20) color -> . RED
    (21) color -> . BLUE
    (22) color -> . GREEN
    (23) color -> . YELLOW
    (24) color -> . ORANGE
    (25) color -> . PURPLE
    (26) color -> . WHITE
    (27) color -> . NAME
    (16) rgb -> . LP NUMBER COMA NUMBER COMA NUMBER RP
    (17) rgb -> . NAME

    RED             shift and go to state 19
    BLUE            shift and go to state 20
    GREEN           shift and go to state 21
    YELLOW          shift and go to state 22
    ORANGE          shift and go to state 23
    PURPLE          shift and go to state 24
    WHITE           shift and go to state 25
    NAME            shift and go to state 26
    LP              shift and go to state 27

    color                          shift and go to state 17
    rgb                            shift and go to state 18

state 10

    (28) animation -> RAINBOW .

    RED             reduce using rule 28 (animation -> RAINBOW .)
    BLUE            reduce using rule 28 (animation -> RAINBOW .)
    GREEN           reduce using rule 28 (animation -> RAINBOW .)
    YELLOW          reduce using rule 28 (animation -> RAINBOW .)
    ORANGE          reduce using rule 28 (animation -> RAINBOW .)
    PURPLE          reduce using rule 28 (animation -> RAINBOW .)
    WHITE           reduce using rule 28 (animation -> RAINBOW .)
    NAME            reduce using rule 28 (animation -> RAINBOW .)
    LP              reduce using rule 28 (animation -> RAINBOW .)
    $end            reduce using rule 28 (animation -> RAINBOW .)


state 11

    (29) animation -> RANDOW_CYCLE .

    RED             reduce using rule 29 (animation -> RANDOW_CYCLE .)
    BLUE            reduce using rule 29 (animation -> RANDOW_CYCLE .)
    GREEN           reduce using rule 29 (animation -> RANDOW_CYCLE .)
    YELLOW          reduce using rule 29 (animation -> RANDOW_CYCLE .)
    ORANGE          reduce using rule 29 (animation -> RANDOW_CYCLE .)
    PURPLE          reduce using rule 29 (animation -> RANDOW_CYCLE .)
    WHITE           reduce using rule 29 (animation -> RANDOW_CYCLE .)
    NAME            reduce using rule 29 (animation -> RANDOW_CYCLE .)
    LP              reduce using rule 29 (animation -> RANDOW_CYCLE .)
    $end            reduce using rule 29 (animation -> RANDOW_CYCLE .)


state 12

    (30) animation -> THEATER_CHASE_RAINBOW .

    RED             reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)
    BLUE            reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)
    GREEN           reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)
    YELLOW          reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)
    ORANGE          reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)
    PURPLE          reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)
    WHITE           reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)
    NAME            reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)
    LP              reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)
    $end            reduce using rule 30 (animation -> THEATER_CHASE_RAINBOW .)


state 13

    (31) animation -> COLOR_WIPE .

    RED             reduce using rule 31 (animation -> COLOR_WIPE .)
    BLUE            reduce using rule 31 (animation -> COLOR_WIPE .)
    GREEN           reduce using rule 31 (animation -> COLOR_WIPE .)
    YELLOW          reduce using rule 31 (animation -> COLOR_WIPE .)
    ORANGE          reduce using rule 31 (animation -> COLOR_WIPE .)
    PURPLE          reduce using rule 31 (animation -> COLOR_WIPE .)
    WHITE           reduce using rule 31 (animation -> COLOR_WIPE .)
    NAME            reduce using rule 31 (animation -> COLOR_WIPE .)
    LP              reduce using rule 31 (animation -> COLOR_WIPE .)
    $end            reduce using rule 31 (animation -> COLOR_WIPE .)


state 14

    (32) animation -> THEATER_CHASE .

    RED             reduce using rule 32 (animation -> THEATER_CHASE .)
    BLUE            reduce using rule 32 (animation -> THEATER_CHASE .)
    GREEN           reduce using rule 32 (animation -> THEATER_CHASE .)
    YELLOW          reduce using rule 32 (animation -> THEATER_CHASE .)
    ORANGE          reduce using rule 32 (animation -> THEATER_CHASE .)
    PURPLE          reduce using rule 32 (animation -> THEATER_CHASE .)
    WHITE           reduce using rule 32 (animation -> THEATER_CHASE .)
    NAME            reduce using rule 32 (animation -> THEATER_CHASE .)
    LP              reduce using rule 32 (animation -> THEATER_CHASE .)
    $end            reduce using rule 32 (animation -> THEATER_CHASE .)


state 15

    (33) animation -> NAME .

    RED             reduce using rule 33 (animation -> NAME .)
    BLUE            reduce using rule 33 (animation -> NAME .)
    GREEN           reduce using rule 33 (animation -> NAME .)
    YELLOW          reduce using rule 33 (animation -> NAME .)
    ORANGE          reduce using rule 33 (animation -> NAME .)
    PURPLE          reduce using rule 33 (animation -> NAME .)
    WHITE           reduce using rule 33 (animation -> NAME .)
    NAME            reduce using rule 33 (animation -> NAME .)
    LP              reduce using rule 33 (animation -> NAME .)


state 16

    (4) var_assign -> NAME EQUALS . color
    (5) var_assign -> NAME EQUALS . rgb
    (6) var_assign -> NAME EQUALS . miliseconds
    (7) var_assign -> NAME EQUALS . animation
    (8) var_assign -> NAME EQUALS . button_pos
    (20) color -> . RED
    (21) color -> . BLUE
    (22) color -> . GREEN
    (23) color -> . YELLOW
    (24) color -> . ORANGE
    (25) color -> . PURPLE
    (26) color -> . WHITE
    (27) color -> . NAME
    (16) rgb -> . LP NUMBER COMA NUMBER COMA NUMBER RP
    (17) rgb -> . NAME
    (18) miliseconds -> . NUMBER
    (19) miliseconds -> . NAME
    (28) animation -> . RAINBOW
    (29) animation -> . RANDOW_CYCLE
    (30) animation -> . THEATER_CHASE_RAINBOW
    (31) animation -> . COLOR_WIPE
    (32) animation -> . THEATER_CHASE
    (33) animation -> . NAME
    (13) button_pos -> . BUTTON_UP
    (14) button_pos -> . BUTTON_DOWN
    (15) button_pos -> . NAME

    RED             shift and go to state 19
    BLUE            shift and go to state 20
    GREEN           shift and go to state 21
    YELLOW          shift and go to state 22
    ORANGE          shift and go to state 23
    PURPLE          shift and go to state 24
    WHITE           shift and go to state 25
    NAME            shift and go to state 28
    LP              shift and go to state 27
    NUMBER          shift and go to state 34
    RAINBOW         shift and go to state 10
    RANDOW_CYCLE    shift and go to state 11
    THEATER_CHASE_RAINBOW shift and go to state 12
    COLOR_WIPE      shift and go to state 13
    THEATER_CHASE   shift and go to state 14
    BUTTON_UP       shift and go to state 35
    BUTTON_DOWN     shift and go to state 36

    color                          shift and go to state 29
    rgb                            shift and go to state 30
    miliseconds                    shift and go to state 31
    animation                      shift and go to state 32
    button_pos                     shift and go to state 33

state 17

    (9) command -> ANIMATE animation color . miliseconds
    (18) miliseconds -> . NUMBER
    (19) miliseconds -> . NAME

    NUMBER          shift and go to state 34
    NAME            shift and go to state 38

    miliseconds                    shift and go to state 37

state 18

    (10) command -> ANIMATE animation rgb . miliseconds
    (18) miliseconds -> . NUMBER
    (19) miliseconds -> . NAME

    NUMBER          shift and go to state 34
    NAME            shift and go to state 38

    miliseconds                    shift and go to state 39

state 19

    (20) color -> RED .

    NUMBER          reduce using rule 20 (color -> RED .)
    NAME            reduce using rule 20 (color -> RED .)
    $end            reduce using rule 20 (color -> RED .)


state 20

    (21) color -> BLUE .

    NUMBER          reduce using rule 21 (color -> BLUE .)
    NAME            reduce using rule 21 (color -> BLUE .)
    $end            reduce using rule 21 (color -> BLUE .)


state 21

    (22) color -> GREEN .

    NUMBER          reduce using rule 22 (color -> GREEN .)
    NAME            reduce using rule 22 (color -> GREEN .)
    $end            reduce using rule 22 (color -> GREEN .)


state 22

    (23) color -> YELLOW .

    NUMBER          reduce using rule 23 (color -> YELLOW .)
    NAME            reduce using rule 23 (color -> YELLOW .)
    $end            reduce using rule 23 (color -> YELLOW .)


state 23

    (24) color -> ORANGE .

    NUMBER          reduce using rule 24 (color -> ORANGE .)
    NAME            reduce using rule 24 (color -> ORANGE .)
    $end            reduce using rule 24 (color -> ORANGE .)


state 24

    (25) color -> PURPLE .

    NUMBER          reduce using rule 25 (color -> PURPLE .)
    NAME            reduce using rule 25 (color -> PURPLE .)
    $end            reduce using rule 25 (color -> PURPLE .)


state 25

    (26) color -> WHITE .

    NUMBER          reduce using rule 26 (color -> WHITE .)
    NAME            reduce using rule 26 (color -> WHITE .)
    $end            reduce using rule 26 (color -> WHITE .)


state 26

    (27) color -> NAME .
    (17) rgb -> NAME .

  ! reduce/reduce conflict for NUMBER resolved using rule 17 (rgb -> NAME .)
  ! reduce/reduce conflict for NAME resolved using rule 17 (rgb -> NAME .)
    NUMBER          reduce using rule 17 (rgb -> NAME .)
    NAME            reduce using rule 17 (rgb -> NAME .)

  ! NUMBER          [ reduce using rule 27 (color -> NAME .) ]
  ! NAME            [ reduce using rule 27 (color -> NAME .) ]


state 27

    (16) rgb -> LP . NUMBER COMA NUMBER COMA NUMBER RP

    NUMBER          shift and go to state 40


state 28

    (27) color -> NAME .
    (17) rgb -> NAME .
    (19) miliseconds -> NAME .
    (33) animation -> NAME .
    (15) button_pos -> NAME .

  ! reduce/reduce conflict for $end resolved using rule 17 (rgb -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 17 (rgb -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 17 (rgb -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 15 (button_pos -> NAME .)
    $end            reduce using rule 15 (button_pos -> NAME .)

  ! $end            [ reduce using rule 27 (color -> NAME .) ]
  ! $end            [ reduce using rule 17 (rgb -> NAME .) ]
  ! $end            [ reduce using rule 19 (miliseconds -> NAME .) ]
  ! $end            [ reduce using rule 33 (animation -> NAME .) ]


state 29

    (4) var_assign -> NAME EQUALS color .

    $end            reduce using rule 4 (var_assign -> NAME EQUALS color .)


state 30

    (5) var_assign -> NAME EQUALS rgb .

    $end            reduce using rule 5 (var_assign -> NAME EQUALS rgb .)


state 31

    (6) var_assign -> NAME EQUALS miliseconds .

    $end            reduce using rule 6 (var_assign -> NAME EQUALS miliseconds .)


state 32

    (7) var_assign -> NAME EQUALS animation .

    $end            reduce using rule 7 (var_assign -> NAME EQUALS animation .)


state 33

    (8) var_assign -> NAME EQUALS button_pos .

    $end            reduce using rule 8 (var_assign -> NAME EQUALS button_pos .)


state 34

    (18) miliseconds -> NUMBER .

    $end            reduce using rule 18 (miliseconds -> NUMBER .)


state 35

    (13) button_pos -> BUTTON_UP .

    $end            reduce using rule 13 (button_pos -> BUTTON_UP .)


state 36

    (14) button_pos -> BUTTON_DOWN .

    $end            reduce using rule 14 (button_pos -> BUTTON_DOWN .)


state 37

    (9) command -> ANIMATE animation color miliseconds .

    $end            reduce using rule 9 (command -> ANIMATE animation color miliseconds .)


state 38

    (19) miliseconds -> NAME .

    $end            reduce using rule 19 (miliseconds -> NAME .)


state 39

    (10) command -> ANIMATE animation rgb miliseconds .

    $end            reduce using rule 10 (command -> ANIMATE animation rgb miliseconds .)


state 40

    (16) rgb -> LP NUMBER . COMA NUMBER COMA NUMBER RP

    COMA            shift and go to state 41


state 41

    (16) rgb -> LP NUMBER COMA . NUMBER COMA NUMBER RP

    NUMBER          shift and go to state 42


state 42

    (16) rgb -> LP NUMBER COMA NUMBER . COMA NUMBER RP

    COMA            shift and go to state 43


state 43

    (16) rgb -> LP NUMBER COMA NUMBER COMA . NUMBER RP

    NUMBER          shift and go to state 44


state 44

    (16) rgb -> LP NUMBER COMA NUMBER COMA NUMBER . RP

    RP              shift and go to state 45


state 45

    (16) rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .

    NUMBER          reduce using rule 16 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)
    NAME            reduce using rule 16 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)
    $end            reduce using rule 16 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 26 resolved using rule (rgb -> NAME)
WARNING: rejected rule (color -> NAME) in state 26
WARNING: reduce/reduce conflict in state 28 resolved using rule (rgb -> NAME)
WARNING: rejected rule (color -> NAME) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (rgb -> NAME)
WARNING: rejected rule (miliseconds -> NAME) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (rgb -> NAME)
WARNING: rejected rule (animation -> NAME) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (button_pos -> NAME)
WARNING: rejected rule (rgb -> NAME) in state 28
WARNING: Rule (color -> NAME) is never reduced
