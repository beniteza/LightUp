Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> execute
Rule 1     execute -> command
Rule 2     execute -> var_assign
Rule 3     execute -> empty
Rule 4     var_assign -> NAME EQUALS color
Rule 5     var_assign -> NAME EQUALS rgb
Rule 6     var_assign -> NAME EQUALS miliseconds
Rule 7     var_assign -> NAME EQUALS animation
Rule 8     command -> ANIMATE animation color miliseconds
Rule 9     command -> ANIMATE animation rgb miliseconds
Rule 10    rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP
Rule 11    rgb -> NAME
Rule 12    miliseconds -> NUMBER
Rule 13    miliseconds -> NAME
Rule 14    color -> RED
Rule 15    color -> BLUE
Rule 16    color -> GREEN
Rule 17    color -> YELLOW
Rule 18    color -> ORANGE
Rule 19    color -> PURPLE
Rule 20    color -> WHITE
Rule 21    color -> NAME
Rule 22    animation -> RAINBOW
Rule 23    animation -> RANDOW_CYCLE
Rule 24    animation -> THEATER_CHASE_RAINBOW
Rule 25    animation -> COLOR_WIPE
Rule 26    animation -> THEATER_CHASE
Rule 27    animation -> NAME
Rule 28    empty -> <empty>

Terminals, with rules where they appear

ANIMATE              : 8 9
BLUE                 : 15
COLOR_WIPE           : 25
COMA                 : 10 10
EQUALS               : 4 5 6 7
GREEN                : 16
LP                   : 10
NAME                 : 4 5 6 7 11 13 21 27
NUMBER               : 10 10 10 12
ORANGE               : 18
PURPLE               : 19
RAINBOW              : 22
RANDOW_CYCLE         : 23
RED                  : 14
RP                   : 10
THEATER_CHASE        : 26
THEATER_CHASE_RAINBOW : 24
WHITE                : 20
YELLOW               : 17
error                : 

Nonterminals, with rules where they appear

animation            : 7 8 9
color                : 4 8
command              : 1
empty                : 3
execute              : 0
miliseconds          : 6 8 9
rgb                  : 5 9
var_assign           : 2

Parsing method: LALR

state 0

    (0) S' -> . execute
    (1) execute -> . command
    (2) execute -> . var_assign
    (3) execute -> . empty
    (8) command -> . ANIMATE animation color miliseconds
    (9) command -> . ANIMATE animation rgb miliseconds
    (4) var_assign -> . NAME EQUALS color
    (5) var_assign -> . NAME EQUALS rgb
    (6) var_assign -> . NAME EQUALS miliseconds
    (7) var_assign -> . NAME EQUALS animation
    (28) empty -> .

    ANIMATE         shift and go to state 5
    NAME            shift and go to state 6
    $end            reduce using rule 28 (empty -> .)

    execute                        shift and go to state 1
    command                        shift and go to state 2
    var_assign                     shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> execute .



state 2

    (1) execute -> command .

    $end            reduce using rule 1 (execute -> command .)


state 3

    (2) execute -> var_assign .

    $end            reduce using rule 2 (execute -> var_assign .)


state 4

    (3) execute -> empty .

    $end            reduce using rule 3 (execute -> empty .)


state 5

    (8) command -> ANIMATE . animation color miliseconds
    (9) command -> ANIMATE . animation rgb miliseconds
    (22) animation -> . RAINBOW
    (23) animation -> . RANDOW_CYCLE
    (24) animation -> . THEATER_CHASE_RAINBOW
    (25) animation -> . COLOR_WIPE
    (26) animation -> . THEATER_CHASE
    (27) animation -> . NAME

    RAINBOW         shift and go to state 8
    RANDOW_CYCLE    shift and go to state 9
    THEATER_CHASE_RAINBOW shift and go to state 10
    COLOR_WIPE      shift and go to state 11
    THEATER_CHASE   shift and go to state 12
    NAME            shift and go to state 13

    animation                      shift and go to state 7

state 6

    (4) var_assign -> NAME . EQUALS color
    (5) var_assign -> NAME . EQUALS rgb
    (6) var_assign -> NAME . EQUALS miliseconds
    (7) var_assign -> NAME . EQUALS animation

    EQUALS          shift and go to state 14


state 7

    (8) command -> ANIMATE animation . color miliseconds
    (9) command -> ANIMATE animation . rgb miliseconds
    (14) color -> . RED
    (15) color -> . BLUE
    (16) color -> . GREEN
    (17) color -> . YELLOW
    (18) color -> . ORANGE
    (19) color -> . PURPLE
    (20) color -> . WHITE
    (21) color -> . NAME
    (10) rgb -> . LP NUMBER COMA NUMBER COMA NUMBER RP
    (11) rgb -> . NAME

    RED             shift and go to state 17
    BLUE            shift and go to state 18
    GREEN           shift and go to state 19
    YELLOW          shift and go to state 20
    ORANGE          shift and go to state 21
    PURPLE          shift and go to state 22
    WHITE           shift and go to state 23
    NAME            shift and go to state 24
    LP              shift and go to state 25

    color                          shift and go to state 15
    rgb                            shift and go to state 16

state 8

    (22) animation -> RAINBOW .

    RED             reduce using rule 22 (animation -> RAINBOW .)
    BLUE            reduce using rule 22 (animation -> RAINBOW .)
    GREEN           reduce using rule 22 (animation -> RAINBOW .)
    YELLOW          reduce using rule 22 (animation -> RAINBOW .)
    ORANGE          reduce using rule 22 (animation -> RAINBOW .)
    PURPLE          reduce using rule 22 (animation -> RAINBOW .)
    WHITE           reduce using rule 22 (animation -> RAINBOW .)
    NAME            reduce using rule 22 (animation -> RAINBOW .)
    LP              reduce using rule 22 (animation -> RAINBOW .)
    $end            reduce using rule 22 (animation -> RAINBOW .)


state 9

    (23) animation -> RANDOW_CYCLE .

    RED             reduce using rule 23 (animation -> RANDOW_CYCLE .)
    BLUE            reduce using rule 23 (animation -> RANDOW_CYCLE .)
    GREEN           reduce using rule 23 (animation -> RANDOW_CYCLE .)
    YELLOW          reduce using rule 23 (animation -> RANDOW_CYCLE .)
    ORANGE          reduce using rule 23 (animation -> RANDOW_CYCLE .)
    PURPLE          reduce using rule 23 (animation -> RANDOW_CYCLE .)
    WHITE           reduce using rule 23 (animation -> RANDOW_CYCLE .)
    NAME            reduce using rule 23 (animation -> RANDOW_CYCLE .)
    LP              reduce using rule 23 (animation -> RANDOW_CYCLE .)
    $end            reduce using rule 23 (animation -> RANDOW_CYCLE .)


state 10

    (24) animation -> THEATER_CHASE_RAINBOW .

    RED             reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)
    BLUE            reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)
    GREEN           reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)
    YELLOW          reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)
    ORANGE          reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)
    PURPLE          reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)
    WHITE           reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)
    NAME            reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)
    LP              reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)
    $end            reduce using rule 24 (animation -> THEATER_CHASE_RAINBOW .)


state 11

    (25) animation -> COLOR_WIPE .

    RED             reduce using rule 25 (animation -> COLOR_WIPE .)
    BLUE            reduce using rule 25 (animation -> COLOR_WIPE .)
    GREEN           reduce using rule 25 (animation -> COLOR_WIPE .)
    YELLOW          reduce using rule 25 (animation -> COLOR_WIPE .)
    ORANGE          reduce using rule 25 (animation -> COLOR_WIPE .)
    PURPLE          reduce using rule 25 (animation -> COLOR_WIPE .)
    WHITE           reduce using rule 25 (animation -> COLOR_WIPE .)
    NAME            reduce using rule 25 (animation -> COLOR_WIPE .)
    LP              reduce using rule 25 (animation -> COLOR_WIPE .)
    $end            reduce using rule 25 (animation -> COLOR_WIPE .)


state 12

    (26) animation -> THEATER_CHASE .

    RED             reduce using rule 26 (animation -> THEATER_CHASE .)
    BLUE            reduce using rule 26 (animation -> THEATER_CHASE .)
    GREEN           reduce using rule 26 (animation -> THEATER_CHASE .)
    YELLOW          reduce using rule 26 (animation -> THEATER_CHASE .)
    ORANGE          reduce using rule 26 (animation -> THEATER_CHASE .)
    PURPLE          reduce using rule 26 (animation -> THEATER_CHASE .)
    WHITE           reduce using rule 26 (animation -> THEATER_CHASE .)
    NAME            reduce using rule 26 (animation -> THEATER_CHASE .)
    LP              reduce using rule 26 (animation -> THEATER_CHASE .)
    $end            reduce using rule 26 (animation -> THEATER_CHASE .)


state 13

    (27) animation -> NAME .

    RED             reduce using rule 27 (animation -> NAME .)
    BLUE            reduce using rule 27 (animation -> NAME .)
    GREEN           reduce using rule 27 (animation -> NAME .)
    YELLOW          reduce using rule 27 (animation -> NAME .)
    ORANGE          reduce using rule 27 (animation -> NAME .)
    PURPLE          reduce using rule 27 (animation -> NAME .)
    WHITE           reduce using rule 27 (animation -> NAME .)
    NAME            reduce using rule 27 (animation -> NAME .)
    LP              reduce using rule 27 (animation -> NAME .)


state 14

    (4) var_assign -> NAME EQUALS . color
    (5) var_assign -> NAME EQUALS . rgb
    (6) var_assign -> NAME EQUALS . miliseconds
    (7) var_assign -> NAME EQUALS . animation
    (14) color -> . RED
    (15) color -> . BLUE
    (16) color -> . GREEN
    (17) color -> . YELLOW
    (18) color -> . ORANGE
    (19) color -> . PURPLE
    (20) color -> . WHITE
    (21) color -> . NAME
    (10) rgb -> . LP NUMBER COMA NUMBER COMA NUMBER RP
    (11) rgb -> . NAME
    (12) miliseconds -> . NUMBER
    (13) miliseconds -> . NAME
    (22) animation -> . RAINBOW
    (23) animation -> . RANDOW_CYCLE
    (24) animation -> . THEATER_CHASE_RAINBOW
    (25) animation -> . COLOR_WIPE
    (26) animation -> . THEATER_CHASE
    (27) animation -> . NAME

    RED             shift and go to state 17
    BLUE            shift and go to state 18
    GREEN           shift and go to state 19
    YELLOW          shift and go to state 20
    ORANGE          shift and go to state 21
    PURPLE          shift and go to state 22
    WHITE           shift and go to state 23
    NAME            shift and go to state 26
    LP              shift and go to state 25
    NUMBER          shift and go to state 31
    RAINBOW         shift and go to state 8
    RANDOW_CYCLE    shift and go to state 9
    THEATER_CHASE_RAINBOW shift and go to state 10
    COLOR_WIPE      shift and go to state 11
    THEATER_CHASE   shift and go to state 12

    color                          shift and go to state 27
    rgb                            shift and go to state 28
    miliseconds                    shift and go to state 29
    animation                      shift and go to state 30

state 15

    (8) command -> ANIMATE animation color . miliseconds
    (12) miliseconds -> . NUMBER
    (13) miliseconds -> . NAME

    NUMBER          shift and go to state 31
    NAME            shift and go to state 33

    miliseconds                    shift and go to state 32

state 16

    (9) command -> ANIMATE animation rgb . miliseconds
    (12) miliseconds -> . NUMBER
    (13) miliseconds -> . NAME

    NUMBER          shift and go to state 31
    NAME            shift and go to state 33

    miliseconds                    shift and go to state 34

state 17

    (14) color -> RED .

    NUMBER          reduce using rule 14 (color -> RED .)
    NAME            reduce using rule 14 (color -> RED .)
    $end            reduce using rule 14 (color -> RED .)


state 18

    (15) color -> BLUE .

    NUMBER          reduce using rule 15 (color -> BLUE .)
    NAME            reduce using rule 15 (color -> BLUE .)
    $end            reduce using rule 15 (color -> BLUE .)


state 19

    (16) color -> GREEN .

    NUMBER          reduce using rule 16 (color -> GREEN .)
    NAME            reduce using rule 16 (color -> GREEN .)
    $end            reduce using rule 16 (color -> GREEN .)


state 20

    (17) color -> YELLOW .

    NUMBER          reduce using rule 17 (color -> YELLOW .)
    NAME            reduce using rule 17 (color -> YELLOW .)
    $end            reduce using rule 17 (color -> YELLOW .)


state 21

    (18) color -> ORANGE .

    NUMBER          reduce using rule 18 (color -> ORANGE .)
    NAME            reduce using rule 18 (color -> ORANGE .)
    $end            reduce using rule 18 (color -> ORANGE .)


state 22

    (19) color -> PURPLE .

    NUMBER          reduce using rule 19 (color -> PURPLE .)
    NAME            reduce using rule 19 (color -> PURPLE .)
    $end            reduce using rule 19 (color -> PURPLE .)


state 23

    (20) color -> WHITE .

    NUMBER          reduce using rule 20 (color -> WHITE .)
    NAME            reduce using rule 20 (color -> WHITE .)
    $end            reduce using rule 20 (color -> WHITE .)


state 24

    (21) color -> NAME .
    (11) rgb -> NAME .

  ! reduce/reduce conflict for NUMBER resolved using rule 11 (rgb -> NAME .)
  ! reduce/reduce conflict for NAME resolved using rule 11 (rgb -> NAME .)
    NUMBER          reduce using rule 11 (rgb -> NAME .)
    NAME            reduce using rule 11 (rgb -> NAME .)

  ! NUMBER          [ reduce using rule 21 (color -> NAME .) ]
  ! NAME            [ reduce using rule 21 (color -> NAME .) ]


state 25

    (10) rgb -> LP . NUMBER COMA NUMBER COMA NUMBER RP

    NUMBER          shift and go to state 35


state 26

    (21) color -> NAME .
    (11) rgb -> NAME .
    (13) miliseconds -> NAME .
    (27) animation -> NAME .

  ! reduce/reduce conflict for $end resolved using rule 11 (rgb -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 11 (rgb -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 11 (rgb -> NAME .)
    $end            reduce using rule 11 (rgb -> NAME .)

  ! $end            [ reduce using rule 21 (color -> NAME .) ]
  ! $end            [ reduce using rule 13 (miliseconds -> NAME .) ]
  ! $end            [ reduce using rule 27 (animation -> NAME .) ]


state 27

    (4) var_assign -> NAME EQUALS color .

    $end            reduce using rule 4 (var_assign -> NAME EQUALS color .)


state 28

    (5) var_assign -> NAME EQUALS rgb .

    $end            reduce using rule 5 (var_assign -> NAME EQUALS rgb .)


state 29

    (6) var_assign -> NAME EQUALS miliseconds .

    $end            reduce using rule 6 (var_assign -> NAME EQUALS miliseconds .)


state 30

    (7) var_assign -> NAME EQUALS animation .

    $end            reduce using rule 7 (var_assign -> NAME EQUALS animation .)


state 31

    (12) miliseconds -> NUMBER .

    $end            reduce using rule 12 (miliseconds -> NUMBER .)


state 32

    (8) command -> ANIMATE animation color miliseconds .

    $end            reduce using rule 8 (command -> ANIMATE animation color miliseconds .)


state 33

    (13) miliseconds -> NAME .

    $end            reduce using rule 13 (miliseconds -> NAME .)


state 34

    (9) command -> ANIMATE animation rgb miliseconds .

    $end            reduce using rule 9 (command -> ANIMATE animation rgb miliseconds .)


state 35

    (10) rgb -> LP NUMBER . COMA NUMBER COMA NUMBER RP

    COMA            shift and go to state 36


state 36

    (10) rgb -> LP NUMBER COMA . NUMBER COMA NUMBER RP

    NUMBER          shift and go to state 37


state 37

    (10) rgb -> LP NUMBER COMA NUMBER . COMA NUMBER RP

    COMA            shift and go to state 38


state 38

    (10) rgb -> LP NUMBER COMA NUMBER COMA . NUMBER RP

    NUMBER          shift and go to state 39


state 39

    (10) rgb -> LP NUMBER COMA NUMBER COMA NUMBER . RP

    RP              shift and go to state 40


state 40

    (10) rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .

    NUMBER          reduce using rule 10 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)
    NAME            reduce using rule 10 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)
    $end            reduce using rule 10 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 24 resolved using rule (rgb -> NAME)
WARNING: rejected rule (color -> NAME) in state 24
WARNING: reduce/reduce conflict in state 26 resolved using rule (rgb -> NAME)
WARNING: rejected rule (color -> NAME) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (rgb -> NAME)
WARNING: rejected rule (miliseconds -> NAME) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (rgb -> NAME)
WARNING: rejected rule (animation -> NAME) in state 26
WARNING: Rule (color -> NAME) is never reduced
