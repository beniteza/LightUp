Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> execute
Rule 1     execute -> command NEW_LINE
Rule 2     execute -> command NEW_LINE command NEW_LINE
Rule 3     execute -> var_assign
Rule 4     execute -> empty
Rule 5     var_assign -> NAME EQUALS color
Rule 6     var_assign -> NAME EQUALS rgb
Rule 7     var_assign -> NAME EQUALS miliseconds
Rule 8     var_assign -> NAME EQUALS animation
Rule 9     var_assign -> NAME EQUALS button_pos
Rule 10    command -> ANIMATE animation color miliseconds
Rule 11    command -> ANIMATE animation rgb miliseconds
Rule 12    button_pos -> BUTTON_UP
Rule 13    button_pos -> BUTTON_DOWN
Rule 14    button_pos -> NAME
Rule 15    rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP
Rule 16    rgb -> NAME
Rule 17    miliseconds -> NUMBER
Rule 18    miliseconds -> NAME
Rule 19    color -> RED
Rule 20    color -> BLUE
Rule 21    color -> GREEN
Rule 22    color -> YELLOW
Rule 23    color -> ORANGE
Rule 24    color -> PURPLE
Rule 25    color -> WHITE
Rule 26    color -> NAME
Rule 27    animation -> RAINBOW
Rule 28    animation -> RANDOW_CYCLE
Rule 29    animation -> THEATER_CHASE_RAINBOW
Rule 30    animation -> COLOR_WIPE
Rule 31    animation -> THEATER_CHASE
Rule 32    animation -> NAME
Rule 33    empty -> <empty>

Terminals, with rules where they appear

ANIMATE              : 10 11
BLUE                 : 20
BUTTON_DOWN          : 13
BUTTON_UP            : 12
COLOR_WIPE           : 30
COMA                 : 15 15
EQUALS               : 5 6 7 8 9
GREEN                : 21
LP                   : 15
NAME                 : 5 6 7 8 9 14 16 18 26 32
NEW_LINE             : 1 2 2
NUMBER               : 15 15 15 17
ORANGE               : 23
PURPLE               : 24
RAINBOW              : 27
RANDOW_CYCLE         : 28
RED                  : 19
RP                   : 15
THEATER_CHASE        : 31
THEATER_CHASE_RAINBOW : 29
WHITE                : 25
YELLOW               : 22
error                : 

Nonterminals, with rules where they appear

animation            : 8 10 11
button_pos           : 9
color                : 5 10
command              : 1 2 2
empty                : 4
execute              : 0
miliseconds          : 7 10 11
rgb                  : 6 11
var_assign           : 3

Parsing method: LALR

state 0

    (0) S' -> . execute
    (1) execute -> . command NEW_LINE
    (2) execute -> . command NEW_LINE command NEW_LINE
    (3) execute -> . var_assign
    (4) execute -> . empty
    (10) command -> . ANIMATE animation color miliseconds
    (11) command -> . ANIMATE animation rgb miliseconds
    (5) var_assign -> . NAME EQUALS color
    (6) var_assign -> . NAME EQUALS rgb
    (7) var_assign -> . NAME EQUALS miliseconds
    (8) var_assign -> . NAME EQUALS animation
    (9) var_assign -> . NAME EQUALS button_pos
    (33) empty -> .

    ANIMATE         shift and go to state 5
    NAME            shift and go to state 6
    $end            reduce using rule 33 (empty -> .)

    execute                        shift and go to state 1
    command                        shift and go to state 2
    var_assign                     shift and go to state 3
    empty                          shift and go to state 4

state 1

    (0) S' -> execute .



state 2

    (1) execute -> command . NEW_LINE
    (2) execute -> command . NEW_LINE command NEW_LINE

    NEW_LINE        shift and go to state 7


state 3

    (3) execute -> var_assign .

    $end            reduce using rule 3 (execute -> var_assign .)


state 4

    (4) execute -> empty .

    $end            reduce using rule 4 (execute -> empty .)


state 5

    (10) command -> ANIMATE . animation color miliseconds
    (11) command -> ANIMATE . animation rgb miliseconds
    (27) animation -> . RAINBOW
    (28) animation -> . RANDOW_CYCLE
    (29) animation -> . THEATER_CHASE_RAINBOW
    (30) animation -> . COLOR_WIPE
    (31) animation -> . THEATER_CHASE
    (32) animation -> . NAME

    RAINBOW         shift and go to state 9
    RANDOW_CYCLE    shift and go to state 10
    THEATER_CHASE_RAINBOW shift and go to state 11
    COLOR_WIPE      shift and go to state 12
    THEATER_CHASE   shift and go to state 13
    NAME            shift and go to state 14

    animation                      shift and go to state 8

state 6

    (5) var_assign -> NAME . EQUALS color
    (6) var_assign -> NAME . EQUALS rgb
    (7) var_assign -> NAME . EQUALS miliseconds
    (8) var_assign -> NAME . EQUALS animation
    (9) var_assign -> NAME . EQUALS button_pos

    EQUALS          shift and go to state 15


state 7

    (1) execute -> command NEW_LINE .
    (2) execute -> command NEW_LINE . command NEW_LINE
    (10) command -> . ANIMATE animation color miliseconds
    (11) command -> . ANIMATE animation rgb miliseconds

    $end            reduce using rule 1 (execute -> command NEW_LINE .)
    ANIMATE         shift and go to state 5

    command                        shift and go to state 16

state 8

    (10) command -> ANIMATE animation . color miliseconds
    (11) command -> ANIMATE animation . rgb miliseconds
    (19) color -> . RED
    (20) color -> . BLUE
    (21) color -> . GREEN
    (22) color -> . YELLOW
    (23) color -> . ORANGE
    (24) color -> . PURPLE
    (25) color -> . WHITE
    (26) color -> . NAME
    (15) rgb -> . LP NUMBER COMA NUMBER COMA NUMBER RP
    (16) rgb -> . NAME

    RED             shift and go to state 19
    BLUE            shift and go to state 20
    GREEN           shift and go to state 21
    YELLOW          shift and go to state 22
    ORANGE          shift and go to state 23
    PURPLE          shift and go to state 24
    WHITE           shift and go to state 25
    NAME            shift and go to state 26
    LP              shift and go to state 27

    color                          shift and go to state 17
    rgb                            shift and go to state 18

state 9

    (27) animation -> RAINBOW .

    RED             reduce using rule 27 (animation -> RAINBOW .)
    BLUE            reduce using rule 27 (animation -> RAINBOW .)
    GREEN           reduce using rule 27 (animation -> RAINBOW .)
    YELLOW          reduce using rule 27 (animation -> RAINBOW .)
    ORANGE          reduce using rule 27 (animation -> RAINBOW .)
    PURPLE          reduce using rule 27 (animation -> RAINBOW .)
    WHITE           reduce using rule 27 (animation -> RAINBOW .)
    NAME            reduce using rule 27 (animation -> RAINBOW .)
    LP              reduce using rule 27 (animation -> RAINBOW .)
    $end            reduce using rule 27 (animation -> RAINBOW .)


state 10

    (28) animation -> RANDOW_CYCLE .

    RED             reduce using rule 28 (animation -> RANDOW_CYCLE .)
    BLUE            reduce using rule 28 (animation -> RANDOW_CYCLE .)
    GREEN           reduce using rule 28 (animation -> RANDOW_CYCLE .)
    YELLOW          reduce using rule 28 (animation -> RANDOW_CYCLE .)
    ORANGE          reduce using rule 28 (animation -> RANDOW_CYCLE .)
    PURPLE          reduce using rule 28 (animation -> RANDOW_CYCLE .)
    WHITE           reduce using rule 28 (animation -> RANDOW_CYCLE .)
    NAME            reduce using rule 28 (animation -> RANDOW_CYCLE .)
    LP              reduce using rule 28 (animation -> RANDOW_CYCLE .)
    $end            reduce using rule 28 (animation -> RANDOW_CYCLE .)


state 11

    (29) animation -> THEATER_CHASE_RAINBOW .

    RED             reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)
    BLUE            reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)
    GREEN           reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)
    YELLOW          reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)
    ORANGE          reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)
    PURPLE          reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)
    WHITE           reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)
    NAME            reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)
    LP              reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)
    $end            reduce using rule 29 (animation -> THEATER_CHASE_RAINBOW .)


state 12

    (30) animation -> COLOR_WIPE .

    RED             reduce using rule 30 (animation -> COLOR_WIPE .)
    BLUE            reduce using rule 30 (animation -> COLOR_WIPE .)
    GREEN           reduce using rule 30 (animation -> COLOR_WIPE .)
    YELLOW          reduce using rule 30 (animation -> COLOR_WIPE .)
    ORANGE          reduce using rule 30 (animation -> COLOR_WIPE .)
    PURPLE          reduce using rule 30 (animation -> COLOR_WIPE .)
    WHITE           reduce using rule 30 (animation -> COLOR_WIPE .)
    NAME            reduce using rule 30 (animation -> COLOR_WIPE .)
    LP              reduce using rule 30 (animation -> COLOR_WIPE .)
    $end            reduce using rule 30 (animation -> COLOR_WIPE .)


state 13

    (31) animation -> THEATER_CHASE .

    RED             reduce using rule 31 (animation -> THEATER_CHASE .)
    BLUE            reduce using rule 31 (animation -> THEATER_CHASE .)
    GREEN           reduce using rule 31 (animation -> THEATER_CHASE .)
    YELLOW          reduce using rule 31 (animation -> THEATER_CHASE .)
    ORANGE          reduce using rule 31 (animation -> THEATER_CHASE .)
    PURPLE          reduce using rule 31 (animation -> THEATER_CHASE .)
    WHITE           reduce using rule 31 (animation -> THEATER_CHASE .)
    NAME            reduce using rule 31 (animation -> THEATER_CHASE .)
    LP              reduce using rule 31 (animation -> THEATER_CHASE .)
    $end            reduce using rule 31 (animation -> THEATER_CHASE .)


state 14

    (32) animation -> NAME .

    RED             reduce using rule 32 (animation -> NAME .)
    BLUE            reduce using rule 32 (animation -> NAME .)
    GREEN           reduce using rule 32 (animation -> NAME .)
    YELLOW          reduce using rule 32 (animation -> NAME .)
    ORANGE          reduce using rule 32 (animation -> NAME .)
    PURPLE          reduce using rule 32 (animation -> NAME .)
    WHITE           reduce using rule 32 (animation -> NAME .)
    NAME            reduce using rule 32 (animation -> NAME .)
    LP              reduce using rule 32 (animation -> NAME .)


state 15

    (5) var_assign -> NAME EQUALS . color
    (6) var_assign -> NAME EQUALS . rgb
    (7) var_assign -> NAME EQUALS . miliseconds
    (8) var_assign -> NAME EQUALS . animation
    (9) var_assign -> NAME EQUALS . button_pos
    (19) color -> . RED
    (20) color -> . BLUE
    (21) color -> . GREEN
    (22) color -> . YELLOW
    (23) color -> . ORANGE
    (24) color -> . PURPLE
    (25) color -> . WHITE
    (26) color -> . NAME
    (15) rgb -> . LP NUMBER COMA NUMBER COMA NUMBER RP
    (16) rgb -> . NAME
    (17) miliseconds -> . NUMBER
    (18) miliseconds -> . NAME
    (27) animation -> . RAINBOW
    (28) animation -> . RANDOW_CYCLE
    (29) animation -> . THEATER_CHASE_RAINBOW
    (30) animation -> . COLOR_WIPE
    (31) animation -> . THEATER_CHASE
    (32) animation -> . NAME
    (12) button_pos -> . BUTTON_UP
    (13) button_pos -> . BUTTON_DOWN
    (14) button_pos -> . NAME

    RED             shift and go to state 19
    BLUE            shift and go to state 20
    GREEN           shift and go to state 21
    YELLOW          shift and go to state 22
    ORANGE          shift and go to state 23
    PURPLE          shift and go to state 24
    WHITE           shift and go to state 25
    NAME            shift and go to state 28
    LP              shift and go to state 27
    NUMBER          shift and go to state 34
    RAINBOW         shift and go to state 9
    RANDOW_CYCLE    shift and go to state 10
    THEATER_CHASE_RAINBOW shift and go to state 11
    COLOR_WIPE      shift and go to state 12
    THEATER_CHASE   shift and go to state 13
    BUTTON_UP       shift and go to state 35
    BUTTON_DOWN     shift and go to state 36

    color                          shift and go to state 29
    rgb                            shift and go to state 30
    miliseconds                    shift and go to state 31
    animation                      shift and go to state 32
    button_pos                     shift and go to state 33

state 16

    (2) execute -> command NEW_LINE command . NEW_LINE

    NEW_LINE        shift and go to state 37


state 17

    (10) command -> ANIMATE animation color . miliseconds
    (17) miliseconds -> . NUMBER
    (18) miliseconds -> . NAME

    NUMBER          shift and go to state 34
    NAME            shift and go to state 39

    miliseconds                    shift and go to state 38

state 18

    (11) command -> ANIMATE animation rgb . miliseconds
    (17) miliseconds -> . NUMBER
    (18) miliseconds -> . NAME

    NUMBER          shift and go to state 34
    NAME            shift and go to state 39

    miliseconds                    shift and go to state 40

state 19

    (19) color -> RED .

    NUMBER          reduce using rule 19 (color -> RED .)
    NAME            reduce using rule 19 (color -> RED .)
    $end            reduce using rule 19 (color -> RED .)


state 20

    (20) color -> BLUE .

    NUMBER          reduce using rule 20 (color -> BLUE .)
    NAME            reduce using rule 20 (color -> BLUE .)
    $end            reduce using rule 20 (color -> BLUE .)


state 21

    (21) color -> GREEN .

    NUMBER          reduce using rule 21 (color -> GREEN .)
    NAME            reduce using rule 21 (color -> GREEN .)
    $end            reduce using rule 21 (color -> GREEN .)


state 22

    (22) color -> YELLOW .

    NUMBER          reduce using rule 22 (color -> YELLOW .)
    NAME            reduce using rule 22 (color -> YELLOW .)
    $end            reduce using rule 22 (color -> YELLOW .)


state 23

    (23) color -> ORANGE .

    NUMBER          reduce using rule 23 (color -> ORANGE .)
    NAME            reduce using rule 23 (color -> ORANGE .)
    $end            reduce using rule 23 (color -> ORANGE .)


state 24

    (24) color -> PURPLE .

    NUMBER          reduce using rule 24 (color -> PURPLE .)
    NAME            reduce using rule 24 (color -> PURPLE .)
    $end            reduce using rule 24 (color -> PURPLE .)


state 25

    (25) color -> WHITE .

    NUMBER          reduce using rule 25 (color -> WHITE .)
    NAME            reduce using rule 25 (color -> WHITE .)
    $end            reduce using rule 25 (color -> WHITE .)


state 26

    (26) color -> NAME .
    (16) rgb -> NAME .

  ! reduce/reduce conflict for NUMBER resolved using rule 16 (rgb -> NAME .)
  ! reduce/reduce conflict for NAME resolved using rule 16 (rgb -> NAME .)
    NUMBER          reduce using rule 16 (rgb -> NAME .)
    NAME            reduce using rule 16 (rgb -> NAME .)

  ! NUMBER          [ reduce using rule 26 (color -> NAME .) ]
  ! NAME            [ reduce using rule 26 (color -> NAME .) ]


state 27

    (15) rgb -> LP . NUMBER COMA NUMBER COMA NUMBER RP

    NUMBER          shift and go to state 41


state 28

    (26) color -> NAME .
    (16) rgb -> NAME .
    (18) miliseconds -> NAME .
    (32) animation -> NAME .
    (14) button_pos -> NAME .

  ! reduce/reduce conflict for $end resolved using rule 16 (rgb -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 16 (rgb -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 16 (rgb -> NAME .)
  ! reduce/reduce conflict for $end resolved using rule 14 (button_pos -> NAME .)
    $end            reduce using rule 14 (button_pos -> NAME .)

  ! $end            [ reduce using rule 26 (color -> NAME .) ]
  ! $end            [ reduce using rule 16 (rgb -> NAME .) ]
  ! $end            [ reduce using rule 18 (miliseconds -> NAME .) ]
  ! $end            [ reduce using rule 32 (animation -> NAME .) ]


state 29

    (5) var_assign -> NAME EQUALS color .

    $end            reduce using rule 5 (var_assign -> NAME EQUALS color .)


state 30

    (6) var_assign -> NAME EQUALS rgb .

    $end            reduce using rule 6 (var_assign -> NAME EQUALS rgb .)


state 31

    (7) var_assign -> NAME EQUALS miliseconds .

    $end            reduce using rule 7 (var_assign -> NAME EQUALS miliseconds .)


state 32

    (8) var_assign -> NAME EQUALS animation .

    $end            reduce using rule 8 (var_assign -> NAME EQUALS animation .)


state 33

    (9) var_assign -> NAME EQUALS button_pos .

    $end            reduce using rule 9 (var_assign -> NAME EQUALS button_pos .)


state 34

    (17) miliseconds -> NUMBER .

    $end            reduce using rule 17 (miliseconds -> NUMBER .)
    NEW_LINE        reduce using rule 17 (miliseconds -> NUMBER .)


state 35

    (12) button_pos -> BUTTON_UP .

    $end            reduce using rule 12 (button_pos -> BUTTON_UP .)


state 36

    (13) button_pos -> BUTTON_DOWN .

    $end            reduce using rule 13 (button_pos -> BUTTON_DOWN .)


state 37

    (2) execute -> command NEW_LINE command NEW_LINE .

    $end            reduce using rule 2 (execute -> command NEW_LINE command NEW_LINE .)


state 38

    (10) command -> ANIMATE animation color miliseconds .

    NEW_LINE        reduce using rule 10 (command -> ANIMATE animation color miliseconds .)


state 39

    (18) miliseconds -> NAME .

    NEW_LINE        reduce using rule 18 (miliseconds -> NAME .)


state 40

    (11) command -> ANIMATE animation rgb miliseconds .

    NEW_LINE        reduce using rule 11 (command -> ANIMATE animation rgb miliseconds .)


state 41

    (15) rgb -> LP NUMBER . COMA NUMBER COMA NUMBER RP

    COMA            shift and go to state 42


state 42

    (15) rgb -> LP NUMBER COMA . NUMBER COMA NUMBER RP

    NUMBER          shift and go to state 43


state 43

    (15) rgb -> LP NUMBER COMA NUMBER . COMA NUMBER RP

    COMA            shift and go to state 44


state 44

    (15) rgb -> LP NUMBER COMA NUMBER COMA . NUMBER RP

    NUMBER          shift and go to state 45


state 45

    (15) rgb -> LP NUMBER COMA NUMBER COMA NUMBER . RP

    RP              shift and go to state 46


state 46

    (15) rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .

    NUMBER          reduce using rule 15 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)
    NAME            reduce using rule 15 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)
    $end            reduce using rule 15 (rgb -> LP NUMBER COMA NUMBER COMA NUMBER RP .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 26 resolved using rule (rgb -> NAME)
WARNING: rejected rule (color -> NAME) in state 26
WARNING: reduce/reduce conflict in state 28 resolved using rule (rgb -> NAME)
WARNING: rejected rule (color -> NAME) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (rgb -> NAME)
WARNING: rejected rule (miliseconds -> NAME) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (rgb -> NAME)
WARNING: rejected rule (animation -> NAME) in state 28
WARNING: reduce/reduce conflict in state 28 resolved using rule (button_pos -> NAME)
WARNING: rejected rule (rgb -> NAME) in state 28
WARNING: Rule (color -> NAME) is never reduced
